let models,googleMaps;_12a‍.x([["default",()=>_12a‍.o]]);_12a‍.w("../models",[["default",["models"],function(v){models=v}]]);_12a‍.w("./googleMaps",[["default",["googleMaps"],function(v){googleMaps=v}]]);


const restaurant = {
    async getAll() {
        return models.Restaurant.findAll();
    },
    async insertMany(restaurants) {
        const updatedRestaurants = await Promise.all(restaurants.map(this.updateRestaurantAddress));
        await models.Restaurant.bulkCreate(updatedRestaurants);
        // refresh socket
        return;
    },

    async update(restaurantId, params) {
        const restaurant = await models.Restaurant.findById(restaurantId);
        const updatedRestaurant = await this.updateRestaurantAddress(params);
        // refresh socket
        return restaurant.update(updatedRestaurant);
    },

    async updateRestaurantAddress(restaurant) {
        if (restaurant.location) {
            const [lat, lng] = restaurant.location.split('/');
            const formattedAddress = await googleMaps.getAddressByLocation(lat, lng);
            restaurant.formattedAddress = formattedAddress;
        }
    }
}

_12a‍.d(restaurant);